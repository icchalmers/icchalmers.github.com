<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Iain Chalmers</title><link href="http://icchalmers.github.io/" rel="alternate"></link><link href="http://icchalmers.github.io/feeds/weeklyclasses.atom.xml" rel="self"></link><id>http://icchalmers.github.io/</id><updated>2015-02-18T00:00:00+00:00</updated><entry><title>Week 4: Electronics Production</title><link href="http://icchalmers.github.io/week-4-electronics-production.html" rel="alternate"></link><updated>2015-02-18T00:00:00+00:00</updated><author><name>Iain Chalmers</name></author><id>tag:icchalmers.github.io,2015-02-18:week-4-electronics-production.html</id><summary type="html">&lt;h2&gt;This Weeks Assignment&lt;/h2&gt;
&lt;p&gt;The assignment for this week was to make a FabISP board. ISP stands for In-circuit Serial Programmer i.e. the device can program chips that are already integrated into their target circuit. The programmer targets Atmel's 8-bit AVR range of microcontrollers such as the ATtiny45 and the ATmega328 found on the Arduino Uno.&lt;/p&gt;
&lt;p&gt;This is the final outcome:&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="finishedBoardAngle" src="http://icchalmers.github.io/images/Week4/finishedBoardAngle.jpg" title="But it takes a while to get there" /&gt;&lt;/p&gt;
&lt;h2&gt;Choosing A FabISP Design&lt;/h2&gt;
&lt;p&gt;There are a number of variations on the FabISP floating around the internet. All of them are based on Dick Streefland's &lt;a href="http://dicks.home.xs4all.nl/avr/usbtiny/"&gt;USBTiny&lt;/a&gt; code, which implements USB in software on ATtinys.&lt;/p&gt;
&lt;p&gt;From there, the lineage seems to be (roughly), from oldest to newest:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Dick Streefland's &lt;a href="http://dicks.home.xs4all.nl/avr/usbtiny/"&gt;USBtiny SPI converter&lt;/a&gt;: This was the first application Dick wrote that used USBtiny.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Lady Ada's &lt;a href="https://learn.adafruit.com/usbtinyisp"&gt;USBtinyISP&lt;/a&gt;: Lady Ada made some low level software changes and made it "official" by adding USB VID/PIDs, as well as some hardware changes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;David Mellis's &lt;a href="http://fab.cba.mit.edu/content/projects/fabisp/"&gt;FabISP&lt;/a&gt;: David started with the USBtinyISP as a reference but the finished product is almost completely different. He swapped all of the through hole components for SMD ones. I think most (if not all) of the parts are standard in the Fab Lab inventory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Andy Bardagjy's &lt;a href="http://fab.cba.mit.edu/content/projects/fabispkey/index.html"&gt;FabISPkey&lt;/a&gt;: The biggest change Andy made was to swap the USB Mini socket for a PCB based USB plug. He also made a variant designed for targeting lower voltage microcontrollers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Valentin Heun's &lt;a href="http://fab.cba.mit.edu/classes/863.11/people/valentin.heun/2.htm"&gt;FabISP&lt;/a&gt;: Valentin tweaked Andy's layout so that after the initial programming of the ATtiny, a section of the board could be snapped off. This meant no more desoldering of jumper wires and it made if obvious that the USB would not function until the ATtiny had been programmed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Zaerc's &lt;a href="http://fablab.waag.org/project/fabtinystar"&gt;FabTinyStar&lt;/a&gt;: AKA the FabTiny*. Version 0.3 "Bas" is the most common variant. This board is a real evolution of the original design. It uses the smaller ATtiny45 in place of the ATtiny44, which has two big advantages. The first is that it's smaller (8 pins vs 14). The second is that with some clever software teaks to calibrate the internal RC oscillator, it can be used without an external crystal. On top of that, the FabTiny* also adds a reset button and a board edge switch for selectively applying power to the target board.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I decided to make the FabTiny*, as it had more features and had an overall more elegant design. I'm not a fan of board edge USB connectors though, as I tend to find them a bit picky about making a good connection. Perhaps I'll make my own variation in the upcoming weeks...&lt;/p&gt;
&lt;p&gt;I followed the &lt;a href="http://fabacademy.org/archives/2015/doc/FabTinyIsp/index.html"&gt;FabTiny* Tutorial&lt;/a&gt; in the class archive.&lt;/p&gt;
&lt;h2&gt;Milling On The Modela&lt;/h2&gt;
&lt;p&gt;I re-milled a new acrylic sacrificial layer for general use on the Modela and then set up two pieces of FR1 (or it might actually be FR2 - we're not sure!). One as a sacrifice, one for milling the actual board.&lt;/p&gt;
&lt;p&gt;I was a little apprehensive about using the Modela. Our lab has always had trouble with the machine, probably due to some issues with the serial cable. The milling job would start out fine, and then suddenly the machine would go crazy. Luckily, recent updates to the Fab Modules seem to have taken care of that problem.&lt;/p&gt;
&lt;p&gt;The second issue was getting the appropriate bits. We had two micro milling bits in the lab: a 0.4mm micromill and a (0.1mm?) V-shaped engraving bit. Unfortunately, neither is &lt;em&gt;quite&lt;/em&gt; the right sized shaft for the collet on the Modela. Our lab manager Graham managed to &lt;a href="http://dictionary.reference.com/browse/jimmy"&gt;jimmy&lt;/a&gt; some filling in the gaps for the V-bit and get it centred pretty well, but it did mean that we couldn't loosen the bit in the collet to drop it onto the surface of the copper. It's pretty easy to set the zero point just by jogging the bit using the controls on the front of the machine though.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="readyToCut" src="http://icchalmers.github.io/images/Week4/readyToCut.jpg" title="This'll be easy! ...." /&gt;&lt;/p&gt;
&lt;p&gt;I used the Fab Modules installed on my laptop (running Linux Mint 17.1 from an external hard drive). I decided to start off trying the V-shaped engraving bit, since it had been centred in the collet and the 0.4mm bit hadn't. With the cut path generated, a z cut depth of -0.15 and a feedrate of 3mm/s, I sent the file to the Modela. &lt;/p&gt;
&lt;p&gt;It was obvious pretty quickly that the bit wasn't going deep enough.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="notDeepEnough" src="http://icchalmers.github.io/images/Week4/notDeepEnough.jpg" title="That's what she said" /&gt;&lt;/p&gt;
&lt;p&gt;I stopped the job, reset the model, increased the cut depth to -0.2mm and restarted the job.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="throughTheCopper" src="http://icchalmers.github.io/images/Week4/throughTheCopper.jpg" title="That white powder makes me happy" /&gt;&lt;/p&gt;
&lt;p&gt;The white powder was a good indication that I was getting all the way through the copper to the FR1 underneath. &lt;/p&gt;
&lt;p&gt;I let the job run to completion, and then decided to try the 0.4mm bit, even though the shaft of the bit was ever-so-slightly too small for the Model (by fractions of a millimetre).
&lt;p align="center" markdown="1"&gt;
&lt;img alt="firstCuts" src="http://icchalmers.github.io/images/Week4/firstCuts.jpg" title="Nothing had gone wrong in a while..." /&gt;
&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;The top board was done with the 0.4mm bit, and the bottom one with the V-shaped engraving bit. When you're working with bits that are fractions of a millimetre wide, any play in the collet just gets magnified. The top board was certainly usable (although the traces looked a little on the thin side) but the V-shaped bit used for the bottom board gave a cleaner result. &lt;/p&gt;
&lt;p&gt;Of the two, I decided it was worth cutting out the bottom board.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="brokenBit1" src="http://icchalmers.github.io/images/Week4/brokenBit1.jpg" title="Woops! Sorry!" /&gt;&lt;/p&gt;
&lt;p&gt;Woops. I was cutting with the default settings in the Fab Modules, and the 0.8mm bit broke almost instantly. I'm not sure it's the same bit as recommend in the Inventory - our ones seem to be quite a bit longer than the ones I've seen in other peoples pictures of the process. With such a long cutting shaft, in hindsight it's not surprising that the bit broke.&lt;/p&gt;
&lt;p&gt;With a new bit in place, I reduced the feedrate from 4mm/s to 1mm/s, and reduced the cut depth per pass from 0.6mm to 0.3mm (or at least, I thought I had... More on that later).&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="cuttingOutBoard" src="http://icchalmers.github.io/images/Week4/cuttingOutBoard.jpg" title="Don't break don't break don't break don't break" /&gt;&lt;/p&gt;
&lt;p&gt;I pretty much held my breath for the entire job, but in the end it finished without incident. &lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="firstMilledBoard_Vbit" src="http://icchalmers.github.io/images/Week4/firstMilledBoard_Vbit.jpg" title="Phew" /&gt;
&lt;img alt="roughVBitBoard" src="http://icchalmers.github.io/images/Week4/roughVBitBoard.jpg" title="Not the best, but not too bad either" /&gt;&lt;/p&gt;
&lt;p&gt;I now had a board, but I wasn't particularly happy with it. Feeling like I was starting to get the hang of it, I decided to try a few more milling jobs with the V-shaped bit at different settings and compare the results.&lt;/p&gt;
&lt;p&gt;The first one increasing the feedrate to 4mm/s. The job finished, and it looked pretty good. What I didn't realise was that my laptop had died right at the end of the job. I pushed the view button to go back and start the next job, and apparently in it's death throws my laptop sent some junk to the serial port and this happened...&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="brokenBit2" src="http://icchalmers.github.io/images/Week4/brokenBit2.jpg" title="WHY?! WHY WOULD YOU DO THIS?!" /&gt;&lt;/p&gt;
&lt;p&gt;The bit went back to it's last cut point, plunged to the cut depth and then proceeded to go to it's home position... Fair to say that I swore quite a lot, and the bit never survived its ordeal. &lt;/p&gt;
&lt;p&gt;If it hadn't been for the giant gouge through the middle of the board, I would have been pretty happy with that one. As it was, I had space for two more attempts. I tried one at 2mm/s feed rate, but the board must have been a bit unlevel and part of the circuit never cut (the front board in the image below, near the top of the board). I decided that the best result had been with the 4mm/s feed rate, so re-ran the job that had been destroyed.&lt;/p&gt;
&lt;p&gt;It finished fine and the board looked good so I started the board cut out. Then this happened...&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="brokenBit3" src="http://icchalmers.github.io/images/Week4/brokenBit3.jpg" title="First bit I swore, second bit I cried. This third one I sighed forlornly" /&gt;&lt;/p&gt;
&lt;p&gt;I was starting to feel pretty guilty at this point. For those who have lost count, I had broken &lt;strong&gt;three&lt;/strong&gt; bits by this point. I thought that 1mm/s and a cut depth of 0.3mm/s would have been OK, but no. Turns out the last job finishing was a bit of a fluke. I examined the board, and was confused to see that the cut depth was definitely more than 0.3mm.&lt;/p&gt;
&lt;p&gt;Now that I've had some time to reflect, I think I know my mistake. Turns out I had missed a setting...&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="secretSetting" src="http://icchalmers.github.io/images/Week4/secretSetting.png" title="With a giant red box around it, how did I miss it?!" /&gt;&lt;/p&gt;
&lt;p&gt;Yup, the first cut was &lt;strong&gt;ALWAYS 0.6mm&lt;/strong&gt;, regardless of what I had been setting the cut depth to. To be honest it's a miracle I only broke two bits. At least I'll have plenty of opportunities to try again as the weeks go on!&lt;/p&gt;
&lt;p&gt;I was a nervous wreck by this point. With a new bit in, I ran the cut job at 0.5mm/s with a cut depth of 0.2mm. It took ages but as long as I didn't break &lt;em&gt;another&lt;/em&gt; bit, I didn't care. Since I still had the initial cut depth set to 0.6mm, I was lucky I didn't break bit number four.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="betterRoughVBitBoard" src="http://icchalmers.github.io/images/Week4/betterRoughVBitBoard.jpg" title="Good enough for now. No more bits must die for this assignment" /&gt;&lt;/p&gt;
&lt;p&gt;See that thin bit of copper around the USB connector? I'm taking that as proof that I hadn't been imagining that I could actually see the bit bending as the board was cut out. The (possibly imagined) bend meant that the board outline was slightly off, and the board ended up a little larger than intended. It was easy to scrape off the copper with a craft knife, but I did have to file down the edges of the USB so that it would fit in a USB port.&lt;/p&gt;
&lt;p&gt;Anyway, a wash and some light sanding later, I was ready for the easy part: soldering.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="finishedBoardAngle" src="http://icchalmers.github.io/images/Week4/finishedBoardAngle.jpg" title="Not the best of solder jobs, but functional" /&gt;&lt;/p&gt;
&lt;p&gt;This was the first time I had soldered on a PCB like this one, and the first time I had done any 1206 footprints (thats the package size for the resistors and the capacitors). I've got some soldering experience, but it's always been on nice PCBs from fab houses with helpful solder masks. I admit it's not the cleanest of solder jobs but I think that's partly due to the board design (I know, I know. Excuses, excuses). For my own boards I'll make sure that each component has a defined pad i.e. that it's not connecting to one giant copper plane. That should help the surface tension of the solder to pull the solder up around the components, instead of pooling out everywhere. That capacitor at the bottom left of the board is particularly embarrassing.&lt;/p&gt;
&lt;p&gt;After another quick wash (and dry), it was time to program the board. I followed the instructions and everything pretty much worked straight off. I used the &lt;a href="http://www.atmel.com/tools/avrispmkii.aspx"&gt;AVRISP mkII&lt;/a&gt; to do the programming. The only unexpected part was avrdude warning me that the fuses had changed (which didn't seem to happen in the screenshots from the tutorial). I checked that the new fuses bits were sensible and went ahead and ignored the warning (although notice that the screenshot below was from when I first chickened out and reset them!).&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="installFirmware_RescuedFuses" src="http://icchalmers.github.io/images/Week4/installFirmware_RescuedFuses.png" title="" /&gt;&lt;/p&gt;
&lt;p&gt;I then plugged the FabTiny* into my USB port, said a quick prayer and....&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="USBtinyDetected" src="http://icchalmers.github.io/images/Week4/USBtinyDetected.png" title="Success!" /&gt;&lt;/p&gt;
&lt;p&gt;Success! The device was recognised as &lt;strong&gt;"Multiple Vendors USBtiny"&lt;/strong&gt; (second line from the bottom).&lt;/p&gt;
&lt;p&gt;Happy that everything was working, I blew the final fuse (so to speak) and the FabTiny* was finished.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="writingFinalFuses" src="http://icchalmers.github.io/images/Week4/writingFinalFuses.png" title="Please don't go wrong at this stage!" /&gt;&lt;/p&gt;
&lt;h2&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;Overall, I thought the whole process was a bit of a &lt;a href="http://dictionary.reference.com/browse/kerfuffle"&gt;kerfuffle&lt;/a&gt;. If you could 100% guarantee a board would come out perfect every time, it would probably be OK. But I think that's rarely the case. I would happily use the Modela for really small, simple circuits that I needed &lt;em&gt;right now&lt;/em&gt;. For example, a little break out board for an SMD chip so that I could quickly test it in a breadboard (I disagree with Neil on breadboards. They're just another tool, and as long as you understand their limitations then they're pretty useful for prototyping).&lt;/p&gt;
&lt;p&gt;Instead of milling, I would much rather just send out a board to somewhere like &lt;a href="www.oshpark.com"&gt;OSHPark&lt;/a&gt;. Sure, I might have to wait a few weeks, but during that time I can happily be doing something else. For almost the same price, I can get professional double sided boards with solder masks, silk screens and all the trimmings. &lt;/p&gt;</summary></entry><entry><title>Bonus Content! Week 3.5: Even More Computer Controlled Cutting</title><link href="http://icchalmers.github.io/bonus-content-week-35-even-more-computer-controlled-cutting.html" rel="alternate"></link><updated>2015-02-16T00:00:00+00:00</updated><author><name>Iain Chalmers</name></author><id>tag:icchalmers.github.io,2015-02-16:bonus-content-week-35-even-more-computer-controlled-cutting.html</id><summary type="html">&lt;h2&gt;Bonus?!&lt;/h2&gt;
&lt;p&gt;Everyone loves a freebie! My &lt;a href="http://icchalmers.github.io/week-3-computer-controlled-cutting.html"&gt;Week 3: Computer Controlled Cutting&lt;/a&gt; post was already on the long side, so I'm splitting the "extra credit" work off to this post.&lt;/p&gt;
&lt;p&gt;So what's the bonus?! Well I tried the vinyl cutter, and cut my &lt;a href="http://icchalmers.github.io/week-2-computer-aided-design.html"&gt;word clock model from Week 2&lt;/a&gt; out in cardboard.&lt;/p&gt;
&lt;h2&gt;The Vinyl Cutter&lt;/h2&gt;
&lt;p&gt;This parts going to be the quickest write up I do. I tried to cut out the Fab Lab logo in vinyl. It worked.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="vinylFabLogo" src="http://icchalmers.github.io/images/Week3/vinylFabLogo.jpg" title="Instant success!" /&gt;&lt;/p&gt;
&lt;p&gt;I did three. One for the lab, one for my logbook and one for future graffiti-ing. The only slight mishap I had was when I tried to cut directly from a roll of vinyl and for some reason it decided to set the origin at the END of the roll. I wish I had a photo of my face as several meters of vinyl come shooting out the front of the plotter.&lt;/p&gt;
&lt;h2&gt;The Cardboard Word Clock&lt;/h2&gt;
&lt;p&gt;Since I had a spare sheet and a half of cardboard left, I thought I would try cutting out the V2.0 model of the word clock.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="cardboardWordClock" src="http://icchalmers.github.io/images/Week3/cardboardClock.jpg" title="BOOM!" /&gt;&lt;/p&gt;
&lt;p&gt;Cutting the panel with the front face took just over 8 minutes, which was a lot less than I was expecting with all the fiddly letters to cut. Once again the cardboard impressed me. I fully expected the tiny little struts holding the middle of letters to break but the amount of detail the cardboard held was excellent.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="cardboardClockCutTime" src="http://icchalmers.github.io/images/Week3/cardboardClockCutTime.jpg" title="Surprisingly quick" /&gt;
&lt;img alt="cardboardClockFace" src="http://icchalmers.github.io/images/Week3/cardboardClockFace.jpg" title="Look at that 'A'. Just look at it! And that 'R'?! Exquisite." /&gt;&lt;/p&gt;
&lt;p&gt;I was left with a lovely little pile of cardboard letters that I can't quite bring myself to throw out.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="cardboardLetters" src="http://icchalmers.github.io/images/Week3/cardboardLetters.jpg" title="I shall put them in a box and play with them every day and keep them forever and ever" /&gt;&lt;/p&gt;
&lt;p&gt;Cutting the clock out in cardboard was exceptionally useful for checking my design. The grid worked out great (even if I did't have quite enough cardboard to hand to cut all of it out).&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="cardboardClockPartGrid" src="http://icchalmers.github.io/images/Week3/cardboardClockPartGrid.jpg" title="Just enough to prove it worked" /&gt;
&lt;img alt="cardboardClockGridCloseup" src="http://icchalmers.github.io/images/Week3/cardboardClockGridCloseup.jpg" title="A most excellent fit due to my press-fit experiments" /&gt;&lt;/p&gt;
&lt;p&gt;When putting the middle grid together with the back and sides I realised I had forgotten to chamfer the tabs, which made getting everything together a bit of a &lt;a href="http://www.scotsman.com/gaelic/scottish-word-of-the-day-guddle-1-2915914"&gt;guddle&lt;/a&gt;. &lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="cardboardClockInterior" src="http://icchalmers.github.io/images/Week3/cardboardClockInterior.jpg" title="That took a lot longer than it should have, and involved a lot more swearing" /&gt;&lt;/p&gt;
&lt;p&gt;But hey, that's why I was cutting it out in cardboard in the first place - to find these things out! I also had my first disappointment with the cardboard, which didn't help with getting the frame together. The sheet I was using had been badly stored and had a pretty bad bend in it. It hadn't mattered for the press-fit kit because the pieces were so small, but for the long edges of the clock it was pretty obvious.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="cardboardWarp" src="http://icchalmers.github.io/images/Week3/cardboardWarp.jpg" title="It magnificently exceeds all my expectations but one, and I'm bitterly disappointed. Stupid cardboard." /&gt;&lt;/p&gt;
&lt;p&gt;On the bright side, my experimental LED support structure and clip looks like it's going to be just the ticket.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="cardboardClockClipBack" src="http://icchalmers.github.io/images/Week3/cardboardClockClipBack.jpg" title="Success!" /&gt;
&lt;img alt="cardboardClockClipFront" src="http://icchalmers.github.io/images/Week3/cardboardClockClipFront.jpg" title="Breaking new frontiers in laser cut joints" /&gt;&lt;/p&gt;
&lt;p&gt;It's a little early to call it perfect. I still need to try in it ply to check it doesnt flex too much in the middle and let the LED strips slip, and the slot in the middle plate is a &lt;a href="http://www.oxforddictionaries.com/definition/english/wee"&gt;wee&lt;/a&gt; bit near the edge for my liking. I'll give it a bash as is though and can always fix it if it does become a problem.&lt;/p&gt;
&lt;h2&gt;Get The Files&lt;/h2&gt;
&lt;p&gt;For the Fab Lab logo I never even saved the file. I just loaded a png of the logo in Inkscape, did a bitmap trace and sent it straight to the plotter.&lt;/p&gt;
&lt;p&gt;If you want a cardboard word clock of your very own, as is usual with my bonus content, the files are all &lt;a href="https://github.com/icchalmers/WordClock_v2.0"&gt;on my GitHub&lt;/a&gt;.&lt;/p&gt;</summary></entry><entry><title>Week 3: Computer Controlled Cutting</title><link href="http://icchalmers.github.io/week-3-computer-controlled-cutting.html" rel="alternate"></link><updated>2015-02-11T00:00:00+00:00</updated><author><name>Iain Chalmers</name></author><id>tag:icchalmers.github.io,2015-02-11:week-3-computer-controlled-cutting.html</id><summary type="html">&lt;h2&gt;This Weeks Assignment&lt;/h2&gt;
&lt;p&gt;The assignment for this week was to make a press-fit construction kit. "Press-fit" means that the pieces slot together snugly and hold the parts in place by friction alone.&lt;/p&gt;
&lt;p&gt;As well as a press-fit kit of parts that can be put together in different ways, I also cut a press-fit cardboard version of the word clock I modeled &lt;a href="http://icchalmers.github.io/week-2-computer-aided-design.html"&gt;in Week 2: Computer Aided Design&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Although not directly part of the assignment, I also followed Neil's advice and gave the Roland vinyl cutter a whirl.&lt;/p&gt;
&lt;p&gt;The press-fit clock and vinyl cutting can be found in my bonus post: &lt;a href="http://icchalmers.github.io/bonus-content-week-35-even-more-computer-controlled-cutting.html"&gt;Bonus Content! Week 3.5: Even More Computer Controlled Cutting&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Press-fit Construction Kit&lt;/h2&gt;
&lt;p&gt;There were three main steps in making the press-fit construction kit:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Determine the perfect slot width for a good press-fit&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Design and cut the parts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Play with it!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Finding The Perfect Fit&lt;/h3&gt;
&lt;p&gt;The first step to getting the prefect fit was to measure the lasers kerf. "Kerf" means the width of material burned away by the laser. To get a rough idea of the kerf, I cut out a rectangle split into 5 sections all 10mm square. With our 40W Epilog laser cutter, I found that a vector cut at 30/100/auto (thats 30% speed, 100% power and automatic frequency selection) gave good reliable cuts. I was surprised that the cardboard needed basically the same settings as I've previously used for 3mm plywood! &lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="findingKerf" src="http://icchalmers.github.io/images/Week3/measuringCardboardKerf.jpg" title="I lost count of how many times I over tightened the callipers and the squares escaped" /&gt;&lt;/p&gt;
&lt;p&gt;If the laser kerf had been zero, you would expect that measuring all 5 squares would come to exactly 50mm. With 5 squares there are the equivalent of 6 laser widths of material missing (the middle cuts, plus half a width at each end). Doing some quick maths:&lt;/p&gt;
&lt;div class="math"&gt;$$kerf = \frac{(50 - 49.01)}{6} = 0.165mm$$&lt;/div&gt;
&lt;p&gt;I decided that since the cardboard was a bit forgiving and would compress, I would round this to 0.2mm. That means reducing slot widths by 0.2mm, or equivalently doing an offset on the entire part outline of 0.1mm.&lt;/p&gt;
&lt;p&gt;Following previous student &lt;a href="http://academy.cba.mit.edu/2013/students/niespielak.anna/study-documentation.html"&gt;Anna Niespielak's example&lt;/a&gt;, I made a pair of slot rulers for testing the fit.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="pressFitRuler" src="http://icchalmers.github.io/images/Week3/pressFitTest.jpg" title="Snug as a bug" /&gt;&lt;/p&gt;
&lt;p&gt;I found that reducing the slot width by 0.1mm gave a good, but not perfect fit. As expected, the -0.2mm slots gave a nice snug fit. The perfect fit was probably somewhere in between, but I went for the tighter fit. As a compromise, I went for slots that were 0.15mm smaller, but also added tiny little nodules of 0.025mm on each side of the slot. I figured this would give a tight fit, but also allow for some variations in the thickness of the cardboard. &lt;/p&gt;
&lt;h3&gt;Designing The Parts&lt;/h3&gt;
&lt;p&gt;I used Inventor to make the parts, since I'm starting to know just enough about it to be dangerous. I decided to go for a hexagon base part, with some straight and curved connectors. Why hexagons? Because I thought I might as well stick with the Catan theme. The hexagon acts as the master, and the other parts update based on its parameters. The size of the hexagon, the slot depths and (of course) the kerf are all parameterised.&lt;/p&gt;
&lt;p&gt;I cut out a few of each part to verify my design, then cut out a whole sheet of them. A 600 x 300mm sheet took just over 14 minutes to cut, and then another 5 to get all the parts out.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="pressFitCutting" src="http://icchalmers.github.io/images/Week3/pressFitCutting.jpg" title="14 minutes of praying nothing caught fire" /&gt; &lt;img alt="pressFitParts" src="http://icchalmers.github.io/images/Week3/pressFitParts.jpg" title="Better get the vacuum out" /&gt;&lt;/p&gt;
&lt;h3&gt;Play!&lt;/h3&gt;
&lt;p&gt;I hadn't really expected to have so much fun with the kit. Instead of doing my documentation, I got distracted for well over an hour just making different shapes:&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="pressFitShapes" src="http://icchalmers.github.io/images/Week3/pressFitShapes.jpg" title="Because anything is better than writing documentation" /&gt;&lt;/p&gt;
&lt;p&gt;My favourite shape was the ball:&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="pressFitBall" src="http://icchalmers.github.io/images/Week3/pressFitBall.jpg" title="I got worryingly attached to this little guy" /&gt;&lt;/p&gt;
&lt;p&gt;Eventually I settled on keeping the parts in these configurations:&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="pressFitBestShapes" src="http://icchalmers.github.io/images/Week3/pressFitBestShapes.jpg" title="Oddly satisfying" /&gt;&lt;/p&gt;
&lt;h2&gt;The Good, The Bad And The Dirty&lt;/h2&gt;
&lt;p&gt;Overall I was &lt;strong&gt;really&lt;/strong&gt; impressed with the cardboard. I thought it was going to be rubbish but I can see why Neil was keen for us to give it a try. It's super cheap too, and I can see myself proofing most of my designs in cardboard in the future.&lt;/p&gt;
&lt;p&gt;I was pretty happy with the fit I achieved.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="pressFitCloseup" src="http://icchalmers.github.io/images/Week3/pressFitCloseup.jpg" title="Solid" /&gt;&lt;/p&gt;
&lt;p&gt;However, in hindsight, I probably would have been better using the -0.1mm slots, or not bothering to add the nodules to the inside of the slots. For slotting single pieces together the fit was excellent, but when it became time to slot multiple pieces together in 3D shapes the fit was tight enough that some of the parts didn't survive being taken apart again.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="pressFitDeaths" src="http://icchalmers.github.io/images/Week3/pressFitDeaths.jpg" title="Gone but not forgotten" /&gt;&lt;/p&gt;
&lt;p&gt;I also realised the parts were a bit more flexible in how they could be put together, as the slots were good for fitting straight onto solid edges too.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="pressFitNoSlot" src="http://icchalmers.github.io/images/Week3/pressFitNoSlot.jpg" title="Not that I did anything particularly creative with the discovery" /&gt;&lt;/p&gt;
&lt;p&gt;The big downside to cutting cardboard with a laser? Carbon. &lt;strong&gt;EVERYWHERE&lt;/strong&gt;&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="pressFitDirtyHands" src="http://icchalmers.github.io/images/Week3/pressFitDirtyHands.jpg" title="Guess who wiped his face with these hands" /&gt;&lt;/p&gt;
&lt;h2&gt;Get The Files&lt;/h2&gt;
&lt;p&gt;As seems to be becoming the norm, file sizes limit what I can add here directly, so you can &lt;a href="https://github.com/icchalmers/PressFitKit"&gt;get all the files on my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To keep with the spirit of the archive:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://icchalmers.github.io/binaries/SlotRuler.pdf"&gt;Here is the press-fit ruler&lt;/a&gt; (note that I added the raster labels in CorelDRAW, but they go from left-to-right -0.2 to +0.2mm in 0.1mm increments, as in the picture above)&lt;/li&gt;
&lt;li&gt;&lt;a href="http://icchalmers.github.io/binaries/PressFitKitParts.pdf"&gt;Here is the component press-fit parts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Both are designed to be cut from 2.5mm cardboard, and the parts use the -0.2mm slot width I've talked about above. Happy press-fitting!&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: 'center'," +
        "    displayIndent: '0em'," +
        "    showMathMenu: true," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'black ! important'} }, linebreaks: { automatic: false, width: 'container' }" +
        "    } " +
        "}); ";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary></entry><entry><title>Week 2: Computer Aided Design</title><link href="http://icchalmers.github.io/week-2-computer-aided-design.html" rel="alternate"></link><updated>2015-02-04T00:00:00+00:00</updated><author><name>Iain Chalmers</name></author><id>tag:icchalmers.github.io,2015-02-04:week-2-computer-aided-design.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;UPDATED 2015-18-04:&lt;/strong&gt; I've added a section at the end covering the fully parameterised version of the clock model.&lt;/p&gt;
&lt;h2&gt;This Weeks Assignment&lt;/h2&gt;
&lt;p&gt;The assignment for this week was to model a possible final project. The term "model" is used pretty loosely, meaning draw, render, animate, simulate or pretty much any computer aided design (&lt;strong&gt;CAD&lt;/strong&gt;) method to represent the project.&lt;/p&gt;
&lt;p&gt;As I mention in my &lt;a href="http://icchalmers.github.io/final-project-proposal.html"&gt;Final Project Proposal&lt;/a&gt; page, I've already made V1.0 of a word clock. The files for V1.0 are available &lt;a href="https://github.com/icchalmers/WordClock_v1.0"&gt;on my GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The original model was made in &lt;a href="http://www.autodesk.co.uk/products/inventor/overview"&gt;Autodesk Inventor&lt;/a&gt;, which is &lt;a href="http://www.autodesk.com/education/free-software/all"&gt;available for free to students&lt;/a&gt;. &lt;/p&gt;
&lt;div style="text-align:center"&gt;&lt;img src ="http://icchalmers.github.io/images/WordClockModel_v1.0.png" /&gt;&lt;br&gt;&lt;br&gt;&lt;/div&gt;

&lt;p&gt;The face of each part was then exported as a DWG file and imported into CorelDRAW X6 for layout and adding the lettering, before being cut on the Epilog laser cutter.&lt;/p&gt;
&lt;p&gt;This weeks plan is to improve my existing Inventor model and, if I have time, I'd like to give &lt;a href="http://www.openscad.org/"&gt;OpenSCAD&lt;/a&gt; a try too.&lt;/p&gt;
&lt;h2&gt;So What Needs Fixed?&lt;/h2&gt;
&lt;p&gt;There were a couple of issue with the original model/design:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Parameterisation:&lt;/strong&gt; Although I tried to parameterise as much of the model as possible, the only parameter that worked consistently was being able to change the thickness of the plywood. Ideally, I would have liked to be able to parameterise a lot more. For example the number, size and spacing of tabs, or the number of letter positions. The most essential parameter I wanted to be able to control was...&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kerf:&lt;/strong&gt; I didn't manage to make kerf a parameter, and in the end I just ignored kerf entirely. I used wood glue to join the grid pieces and the outer frame parts. In actual fact this worked out for the best. Because this essentially slightly compressed the overall size of the outer frame, the front and back plates &lt;em&gt;did&lt;/em&gt; become snap-fit. I had been worried I was going to have to use some kind of hinge to keep the front and back plates removable. Isn't it a nice when things accidentally work out for the better?! That being said, if I swapped to something like acrylic this might not be the case. Parameterised kerf would keep the design nice and flexible.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The Back Plate:&lt;/strong&gt; There were two problems with the back plate. The first is that I forgot to add a hole for putting in a power socket. The second was that I neglected just how much heat the LEDs would generate. With nowhere for the heat to escape, it started to melt up the glue I had used to secure the LEDs in place. Both of these problems were sorted by adding the appropriate holes using a drill, but since I'm updating the design anyway I want a more elegant solution. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Securing the LEDs:&lt;/strong&gt; I tried two different ways of attaching the LED strips to the interior plate.  The first port of call was to use what most engineers reach for when something needs to be stuck in place: &lt;strong&gt;duct tape&lt;/strong&gt;. Unfortunately, the cheap stuff I had didn't stick very well to the plywood, and the heat from the LEDs was also causing problems. My second port of call was to use what most hobby craft people reach for when something needs to be stuck in place: &lt;strong&gt;hot glue&lt;/strong&gt;. &lt;p align="center" markdown="1"&gt;
&lt;img alt="Glue Gun" src="http://icchalmers.github.io/images/GlueGun.jpg" title="Prepare to make a mess" /&gt;&lt;/p&gt; As I mentioned above the heat from the LEDs was causing the glue to become malleable, resulting in the LED strips being able to shift slightly. Glueing the strips down was also a bit too permanent for my liking. On top of that, as anyone who has ever used a glue gun will know, hot glue is excellent at getting on everything it's not supposed to and generally making a quite remarkable mess for such a small device.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The Middle Plate:&lt;/strong&gt; The middle plate was OK. Or more precisely, it would have been OK if the LED strips had been consistent. The problem was that the LED strip I was using was actually a whole bunch of smaller strips soldered together. Although the LEDs were nominally 16.7 mm apart (60 LEDs per metre), the overlap between two soldered strips meant that this sometimes decreased by around 2 mm. That's not a lot, but it did mean that the LEDs didn't fit nicely into the grid holes. Instead, I had to de-solder the strips and add some ridiculously short pieces of wire to keep the LED spacing consistent. It worked, but it was pain and a waste of time. It would be much better to have a middle plate that accounted for this potential variance in LED spacing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Mounting the Electronics:&lt;/strong&gt; I never added any mounting points for the control electronics. The current version just has them sitting loose in the back. Not pretty, and not good for transport, as they could shake around and damage connections/components.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;No Lettering:&lt;/strong&gt; The letter cut outs were added post-model in CorelDRAW. This added an extra step to the process and therefore an extra potential point of screw up. Also, I want to get away from CorelDRAW, as we only have it installed on one machine in our lab. Porting the layout to Inkscape for cutting would be much better (and easier for other people to work with too).&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;That list kept getting longer and longer the more I thought about it... I think that's enough to be getting on with for now!&lt;/p&gt;
&lt;h2&gt;So How Far Did I Get...&lt;/h2&gt;
&lt;p&gt;Actually, not very far... &lt;/p&gt;
&lt;p&gt;Surprise surprise, making a model that is completely parametric isn't exactly easy. After a &lt;strong&gt;lot&lt;/strong&gt; of effort, I've managed to get as far as having the outer frame completely parameterised. I can control the overall dimensions, number of tabs, their size and their spacing (independently on each edge) and can take kerf into account for when it comes to laser cutting.&lt;/p&gt;
&lt;p&gt;Here's the progress so far, using the same control dimensions as my V1.0 clock.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Current Progress" src="http://icchalmers.github.io/images/wordClock_v2.0_WorkingFrame1.png" title="So currently further back than I was when I started..." /&gt;&lt;/p&gt;
&lt;p&gt;And here is a different box, using 6 mm ply instead of 3mm, with different overall dimensions and tab parameters on each edge.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Current Progress" src="http://icchalmers.github.io/images/wordClock_v2.0_WorkingFrame2.png" title="...unless you count the fact that I can now make INFINITE VARIATIONS ON A BOX *Jazz hands*" /&gt;&lt;/p&gt;
&lt;p&gt;I'm slowly getting the hang of what &lt;strong&gt;not&lt;/strong&gt; to do when it comes to parameterising designs. For example, don't constrain new geometry on features that might not exist depending on your parameters... That one took me about &lt;em&gt;two hours&lt;/em&gt; to fix. &lt;em&gt;Urgh....&lt;/em&gt; (And yes I am well aware that that &lt;em&gt;sounds&lt;/em&gt; really obvious, but it's an easy mistake to make!)&lt;/p&gt;
&lt;p&gt;The point I'm at as of the time of writing is &lt;a href="https://github.com/icchalmers/WordClock_v2.0/tree/v0.1"&gt;tagged as v0.1 in my GitHub&lt;/a&gt;. I fully intend to get this whole damn clock paramterised. I'll add that future &lt;strong&gt;awesome&lt;/strong&gt; version to the archive once it exists...&lt;/p&gt;
&lt;h2&gt;Update!&lt;/h2&gt;
&lt;p&gt;So I eventually managed to get most of the model parameterised! The base version of the clock can be completely controlled. The size, number of tabs, number of rows and columns of letters... Pretty much everything that I might want to change, can be. &lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Current Progress" src="http://icchalmers.github.io/images/Week2/wordClock_v2.0_Model.png" title="No support for the LEDs here." /&gt;&lt;/p&gt;
&lt;p&gt;There were some snags though...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The LED support structure was experimental, so I didn't try overly hard to parameterise it. As a result, there are two version of the model now.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/icchalmers/WordClock_v2.0/blob/master/Model/wordClock.ipt"&gt;wordClock.ipt&lt;/a&gt; is the really parameterised version. The downside is that it lacks mounting holes for the electronics and doesn't include the LED strip supports. It also doesn't account for kerf directly.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/icchalmers/WordClock_v2.0/blob/master/Model/SolidifiedClockToMake/wordClock_NonParametric.ipt"&gt;wordClock_NonParametric.ipt&lt;/a&gt; includes the LED support structure. It also has derived .ipt files for each part, and within each of those parts I've accounted for kerf. I've called it &lt;em&gt;NonParametric&lt;/em&gt; but actually a large part of it &lt;strong&gt;is&lt;/strong&gt; still parametric. It's just a lot more...&lt;em&gt;flaky&lt;/em&gt;.&lt;br&gt;&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Inventor is rubbish when it comes to handling the extrusion of text. As a work around, I've marked the construction grid on the front face as exportable and it can be used to align text in Inkspace/CorelDRAW. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The .dwg files for laser cutting layout aren't the best. You can't seem to copy a view. You have to re-place the same part over and over. I'm not overly confident in directly sending the files to the laser cutter either, and on top of that I want people without AutoCAD/Inventor to be able to access the final version of files. Instead I've found it best to export the .dwg as PDFs that can be imported to Inkscape/CorelDRAW.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's look at the more interesting but less parameterised version in some more detail.&lt;/p&gt;
&lt;h2&gt;A More "Solid" Word Clock Model&lt;/h2&gt;
&lt;p&gt;By solid, I mean that its specs are more locked down. It's set to use 3mm plywood, be 216 x 216 x 60mm and have a character grid of 11 x 11. It's also got some experimental supports added for holding the LED strips in place.&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Current Progress" src="http://icchalmers.github.io/images/Week2/wordClock_v2.0_NonParametricModel.png" title="This clocks knows who it is." /&gt;&lt;/p&gt;
&lt;p&gt;The LED supports are essentially strips of ply that hold the LEDs in place, with the supports being held by some little clips. The clip mechanism looks like this:&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="Current Progress" src="http://icchalmers.github.io/images/Week2/wordClock_v2.0_Model_ClipDetail.png" title="I hope this works..." /&gt;&lt;/p&gt;
&lt;p&gt;Basically, the clip slots through, then rotates in the circular hole before being slid to the side to lock it snugly in place. My main concern with the design is that the support pieces will flex too much, and the LED strips in the middle of the clock won't be held tightly in place. If that is the case, I'll cut the supports out of 6mm ply instead. I'm also worried the clips might be a bit thin and prone to snapping. I can thicken them up if needed.&lt;/p&gt;
&lt;p&gt;I've cut this version of the clock out in cardboard. You can read all about it in my &lt;a href="http://icchalmers.github.io/week-3-computer-controlled-cutting.html"&gt;Week 3: Computer Controlled Cutting&lt;/a&gt; post.&lt;/p&gt;
&lt;h2&gt;Get The Files&lt;/h2&gt;
&lt;p&gt;Inventor files are "large". The clock file is only 2MB, but that's large in relation to our limit of only using about 1MB per week for the archive...&lt;/p&gt;
&lt;p&gt;To meet the requirement of having my files in the archive, I'm including the current version (at the time of writing) of the fully parametric model. You can &lt;a href="http://icchalmers.github.io/binaries/wordClock.zip"&gt;download it here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, &lt;strong&gt;this version is almost certainly out of date&lt;/strong&gt;. I would &lt;strong&gt;highly&lt;/strong&gt; recommend you get the latest and greatest, as well as the solidified version of the clock, from &lt;a href="https://github.com/icchalmers/WordClock_v2.0"&gt;my GitHub&lt;/a&gt;.&lt;/p&gt;</summary></entry><entry><title>Week 1: Principles, Practices and Project Management</title><link href="http://icchalmers.github.io/week-1-principles-practices-and-project-management.html" rel="alternate"></link><updated>2015-01-28T00:00:00+00:00</updated><author><name>Iain Chalmers</name></author><id>tag:icchalmers.github.io,2015-01-28:week-1-principles-practices-and-project-management.html</id><summary type="html">&lt;h2&gt;This Weeks Assignment&lt;/h2&gt;
&lt;p&gt;The assignment for this week is split into two parts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Build a personal site in the class archive to track my progress through the Fab Academy&lt;/li&gt;
&lt;li&gt;Document some potential final projects&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This post is about how I went about designing this website. My ideas for a potential final project can be found in the &lt;a href="http://icchalmers.github.io/final-project-proposal.html"&gt;Final Project Proposal&lt;/a&gt; post.&lt;/p&gt;
&lt;h2&gt;Building a Website&lt;/h2&gt;
&lt;p&gt;I've not done any web development since I was in high school, coding in raw HTML in notepad, so I had to do quite a bit of research and experimenting to bring myself up to speed.&lt;/p&gt;
&lt;p&gt;Based on the limitations imposed by the Fab Academy archive (static files only, no database, PHP etc.) I decided that I would try and use a static site generator. There were a &lt;strong&gt;lot&lt;/strong&gt; to choose from. In the end I narrowed my selection down to two:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="http://octopress.org/"&gt;Octopress&lt;/a&gt;: Described as "&lt;em&gt;A blogging framework for hackers&lt;/em&gt;". It's a static site generator based on Jekyll and uses Ruby.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://docs.getpelican.com/en/"&gt;Pelican&lt;/a&gt;: A static site generator based on Python.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;My main reason for going down the static site generator route was that I can focus on content, leaving a lot of the HTML, CSS and JavaScript production "behind-the-scenes".&lt;/p&gt;
&lt;p&gt;I decided to give Octopress a try first, as it looked to be the more popular option.&lt;/p&gt;
&lt;h2&gt;Trying Octopress&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;A blogging framework for hackers&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sounds just like what I was looking for! Here's the thing - I tried setting Octopress up on three different machines, on both Windows and Linux Mint, and had a different set of problems for every install. It was a nightmare. While I do most of my development on Windows, I do jump into Linux sometimes so I wanted a workflow that would work happily across both platforms. On top of that, not being able to get through a "Getting Started" style tutorial without errors, not once but &lt;strong&gt;THREE&lt;/strong&gt; times, is usually a sign to move onto something else.&lt;/p&gt;
&lt;p&gt;Most of the install problems revolved around getting Ruby installed and working correctly. Never having looked at a line of Ruby in my life also wasn't going to help if I did find I had to jump into the source to change something to work how I wanted it.&lt;/p&gt;
&lt;h2&gt;Trying Pelican&lt;/h2&gt;
&lt;p&gt;Pelican was next for evaluation, and thankfully it went a lot better. For starters, I've managed to install it on all three of my computers, in both Windows and Linux Mint. I'm also "conversational" in Python, so having an engine written in a language I can make changes in is a big plus.&lt;/p&gt;
&lt;p&gt;Having got a basic site up and running without any issue, I started looking at customisation for my Fab Academy site. Theming in Pelican is pretty easy - just grab the theme and point to its location in your &lt;code&gt;pelicanconf.py&lt;/code&gt; file. Mobile devices were something I never had to consider back when I was using raw HTML in high school, but I think making a site today that isn't mobile compatible is pretty lazy. &lt;a href="http://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt; seemed like it was just what I needed, and there was already a Pelican theme based on Bootstrap3: &lt;a href="https://github.com/DandyDev/pelican-bootstrap3"&gt;pelican-bootstrap3&lt;/a&gt; by &lt;a href="https://github.com/DandyDev"&gt;Daan Debie&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm still working on customising the theme to really get what I want, but it has a lot of really cool feature built in that should "just work". For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;My posts &lt;em&gt;should&lt;/em&gt; have a comments section using &lt;a href="http://www.disqus.com"&gt;Disqus&lt;/a&gt; (They work in my local serve of the website. If they work on the Fab Archive will be another matter!).&lt;/li&gt;
&lt;li&gt;I've got buttons for various social networks so that people can +1, Like and Tweet my articles in one click. It's all done through a service called &lt;a href="http://www.addthis.com/"&gt;AddThis&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of the features I'm looking to add are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.google.com/analytics/"&gt;Google Analytics&lt;/a&gt;, so that I can keep a track of who (if anyone!) is looking at my site. This should be pretty easy to setup, as the pelican-bootstrap3 theme already has support built it.&lt;/li&gt;
&lt;li&gt;A better navigation menu. I think a navigation menu that sits to the left of the main content works well for Fab Academy style sites, and I would have it collapse to the top for narrow (i.e. mobile) devices. Getting this up and running is involving a bit more customisation of the theme than I can manage this week.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I'll likely continue to make improvements to the site as the weeks go on. I've only just scratched the surface of web development but I'm really starting to enjoy it. Once I get more familiar with the "how" I can focus on the really hard bit: good design.&lt;/p&gt;
&lt;h2&gt;Site Source&lt;/h2&gt;
&lt;p&gt;All of the source for this site is in my BitBucket. Because I forked the &lt;code&gt;pelican-bootstrap3&lt;/code&gt; theme to make my own custom version, &lt;code&gt;pelican-bootstrap-fabacademy&lt;/code&gt;, it's hosted on my GitHub. I've managed to embed the theme on GitHub &lt;em&gt;inside&lt;/em&gt; the Mercurial repo for the site. Probably a terrible idea, but it seems to work quite nicely.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Get the website source here: &lt;a href="https://bitbucket.org/icchalmers/fabacademy2015_site"&gt;https://bitbucket.org/icchalmers/fabacademy2015_site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Get just the theme here: &lt;a href="https://github.com/icchalmers/pelican-bootstrap3-fabacademy"&gt;https://github.com/icchalmers/pelican-bootstrap3-fabacademy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;So, Is A Static Site Generator Worth It?&lt;/h2&gt;
&lt;p&gt;In short, no.&lt;/p&gt;
&lt;p&gt;As with most things in life, &lt;a href="http://xkcd.com/"&gt;xkcd&lt;/a&gt; explains it better than I can:&lt;/p&gt;
&lt;p align="center"&gt;
&lt;img alt="xkcd: Automating" src="http://imgs.xkcd.com/comics/automation.png" title="'Automating' comes from the roots 'auto-' meaning 'self-', and 'mating', meaning 'screwing'." /&gt;   &lt;img alt="xkcd: Is It Worth The Time?" src="http://imgs.xkcd.com/comics/is_it_worth_the_time.png" title="Don't forget the time you spend finding the chart to look up what you save. And the time spent reading this reminder about the time spent. And the time trying to figure out if either of those actually make sense. Remember, every second counts toward your life total, including these right now." /&gt;&lt;/p&gt;
&lt;p&gt;Don't get me wrong, static site generators are great, and I especially like Pelican. The main problem is that they are all pretty much geared up for blog-style websites and that's not a format I think works well for a Fab Academy site. The best Fab Academy sites I've seen all have a pretty basic structure:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;An "About Me" page&lt;/li&gt;
&lt;li&gt;A section for weekly classes.&lt;/li&gt;
&lt;li&gt;A section for the final project.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Most importantly, Fab Academy sites have finite content. Let me clarify that: Fab Academy sites have a set number of pages and are only active for a couple of months. This isn't a blog I'll be writing forever and ever. In order to get the structure I wanted, I've basically been taking a hammer to the theme and content templates. And it's still not there. I would have been a lot quicker just setting up some basic temples to make a skeleton site and just filling in the content as I went.&lt;/p&gt;
&lt;p&gt;Ah well. Live and learn. That's pretty much what this whole process is about anyway!&lt;/p&gt;
&lt;p&gt;Now the real test: leave a comment, if they're working :P&lt;/p&gt;
&lt;h2&gt;Update! 2015-02-05&lt;/h2&gt;
&lt;p&gt;So comments worked fine (yay!), but none of my links to internal content worked in the version I had on the Fab Academy archive (I have a test version hosted &lt;a href="http://icchalmers.github.io"&gt;on my GitHub&lt;/a&gt;). The problem was that on Windows, I couldn’t use the &lt;code&gt;{filename}/path/to/content&lt;/code&gt; syntax to link to internal content like images and other pages. Pelican just complained that it couldn't find the files and didn't update the URL.&lt;/p&gt;
&lt;p&gt;The result was that the absolute links I used instead worked fine on a local serve and on my GitHub because my site lived at the domain root i.e. it was at &lt;code&gt;http://icchalmers.github.io/&lt;/code&gt; and not a level down such as &lt;code&gt;http://icchalmers.github.io/blog&lt;/code&gt;. I had been assuming that having &lt;code&gt;SITEURL = 'http://fabacademy.org/archives/2015/eu/students/chalmers.iain'&lt;/code&gt; would cause my “absolute” links to be absolute to &lt;code&gt;SITEURL&lt;/code&gt; and not just to fabacademy.org. Oh well...&lt;/p&gt;
&lt;p&gt;So for now, this site can only be reliably generated on &lt;em&gt;*nix&lt;/em&gt; systems. My thanks to &lt;a href="https://github.com/avaris"&gt;Avaris&lt;/a&gt; on the #Pelican IRC channel for his help. We might not have fixed the problem, but it's nice to know there are active developers willing to help. Maybe I'll find the time to try diving into the Pelican source to see if I can fix the problem. It's about time I tried my first ever pull request on an open source project...&lt;/p&gt;</summary></entry></feed>